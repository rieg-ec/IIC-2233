TO-DOOO:

- implementar getters y setters:
		1- funcion pagar_a_magizoologo() debe ocuparse para:
				1.1- pagarle al magizoologo (funcion original)
				1.2- retornar el valor que se le paga al magizoologo --> getter

		2- dccriatura.escaparse() y enfermarse():
				1.1 se debe ocupar para saber si se enfermo o no --> getter
				1.2 se debe actualizar la info de la dccriatura si es que esta se enferma

- magizoologos:
	- alimentar_dccriatura()
	- recuperar_dccriatura()
	- sanar_dccriatura()

- dccriaturas:
	- escaparse()
	- enfermarse()

- menu de acciones:
	- pasar_al_dia_siguiente():
		- modelar perdida de salud por hambre o enfermedad (crear funcion en dccriatura
		y llamar ahi)






importante:
	- ocupar clases y metodos abstractos
	- ocupar getters y setters

	- ocupar polimorfismo
	- ocupar herencia



	Estado inicial de magizoologos:
		- nombre
		- criaturas --> todos parten con 1 aleatoria
		- alimentos --> todos parten con 1 aleatorio
		- sickles --> todos parten con 500
		- energia actual --> depende de cada magizoologo
		- licencia --> todos parten con licencia
		- Nivel de aprobacion --> se calcula
		- nivel magico --> depende de subclase
		- destreza --> depende de subclase
		- energia total --> depende de subclase
		- responsabilidad --> depende de subclase


	TO-DO:


DCC.registrar_dccriatura()  --> DCC.vender_dccriatura()
	- vender criatura, descontar sickles
	- crear objeto criatura
	- agregar objeto a criaturas del magizoologo
	- registrar criatura en .csv del dueÃ±o
	- registrar criatura en criaturas.csv

 --> DCC.vender_dccriatura()
pasar_al_dia_siguiente()






funciones por testear:
DCC.pagar_a_magizoologo()
DCC.fiscalizar()
DCC.mostrar_estado()
DCC.calcular_aprobacion()
